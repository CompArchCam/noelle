==== SOFTWARE ENGINEERING
- Add the option to decide the number of threads to target per loop

- Reconsider all abstractions (e.g., do we need all LoopSummary, LoopInfoSummary, and LoopDependenceInfo? do we need SCCEdgeInfo?)

- Create a "Dependence" abstraction, which is DG<Value>
  - have methods like "getSource(), getDestination(), isMemoryBased()"

==== AUTOTUNER
- Extend the autotuner to decide #threads per loop

- Extend the autotuner to decide the parallelization-specific parameters (e.g., chunk size for DOALL, SCCDAG partitioning for DSWP)


==== Parallelizer
- Modify parallelizer to be able to parallelize multiple loops nested to each other at the same time


==== DOALL
- BUGFIX: Swap outer and inner loops (See Builder.cpp:78)
- Promote chunk size to be an option (e.g., --doall-chunksize)


==== OTHER PARALLELIZATION SCHEMES
- Implement PS-DSWP

- Implement HELIX


==== OPTIMIZATIONS
- Inline calls involved in an SCC and rerun the PDG analysis

- Packing/unpacking pushes and pops

- Create a new pass to map memory locations to variables as much as possible
  This removes the overly conservative memory loop-carried data dependences


Task log - Angelo
  - min-max partition heuristic
  - extract environment construction from DSWP and DOALL
  - clean up analysis classes (SCCDAGAttrs, SimpleIVInfo, ...)

In progress:
  Abstract env array:
    In DSWP:
      Pipeline.cpp:134
    LDI->envArray OVERLOADED in DOALL implementation as looping function's environment AND each chunk's env
      DOALL.cpp:87, Builder.cpp:49
  Abstract load/store into environment creation (DSWP, DOALL)

